name: Client Unit Tests

on:
  push:
    paths:
    - 'client/**'
    - 'Makefile'
    - '.github/workflows/unit_tests.yml'
  pull_request:
    paths:
    - 'client/**'
    - 'Makefile'
    - '.github/workflows/unit_tests.yml'

jobs:
  python:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: "./client"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: venv cache
      id: venvcache
      uses: actions/cache@v2
      with:
        path: "./venv"
        key: ${{ runner.os }}-${{ matrix.python }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python }}-venv-
    - name: Install virtualenv
      if: runner.os != 'Linux'
      run: |
        make install-py-setuptools
        make install-venv
    - name: Install virtualenv on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y python3-setuptools python3-venv
    - name: Setup virtualenv
      if: steps.venvcache.outputs.cache-hit != 'true'
      run: |
        make venv
    - name: Add venv to path on non-Windows
      if: runner.os != 'Windows'
      run: |
        echo "::add-path::$PWD/venv/bin"
    - name: Add venv to path on Windows
      if: runner.os == 'Windows'
      run: |
        echo "::add-path::$PWD/venv/Scripts"
    - name: Install dependencies
      if: steps.venvcache.outputs.cache-hit != 'true'
      run: |
        make upgrade-pip
        make install-dev
    - name: Check format
      run: |
        make check-format
    - name: Test
      run: |
        make test
    - name: Generate coverage.xml
      run: |
        make coverage.xml
    - name: Codecov
      # Switch this back to v1 once codecov-actions fixes their tags.
      uses: codecov/codecov-action@v1.0.7
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: ci-codecov
        # This action has a tendency to timeout
        fail_ci_if_error: false
